cmake_minimum_required(VERSION 3.0)
set(CMAKE_SUPPRESS_REGENERATION true)
set(NomProjet TDwx)
PROJECT (${NomProjet})
find_package(opencv  REQUIRED)
find_package(wxWidgets COMPONENTS core base REQUIRED)
find_package(wxHighguiLib REQUIRED)

option(BUILD_SHARED_LIBS "use shared library" ON)

file(GLOB Projet_SRCS
    "*.h"
    "*.cpp")
if (NOT BUILD_SHARED_LIBS)
find_package(glog)
find_package(gflags)
endif(NOT BUILD_SHARED_LIBS)
if (WIN32)
	if (BUILD_SHARED_LIBS)
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MD")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MDd")
      SET(wxWidgets_DEFINITIONS WXUSINGDLL)
	else (BUILD_SHARED_LIBS)
	endif (BUILD_SHARED_LIBS)
else (WIN32)
	if (BUILD_SHARED_LIBS)
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
	else (BUILD_SHARED_LIBS)
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
	endif (BUILD_SHARED_LIBS)
endif (WIN32)

ADD_EXECUTABLE (${NomProjet} ${Projet_SRCS} )

if (wxWidgets_FOUND AND opencv_FOUND AND wxNanoLib_FOUND)
	include_directories(${wxWidgets_INCLUDE_DIRS} ${OpenCV_INCLUDE_DIRS})
	target_link_libraries (${NomProjet} LINK_PUBLIC  ${OpenCV_LIBS} ${wxWidgets_LIBRARIES} wxNanoLib)
endif (wxWidgets_FOUND AND opencv_FOUND AND wxNanoLib_FOUND)
set_target_properties(${NomProjet} PROPERTIES  COMPILE_DEFINITIONS "${wxWidgets_DEFINITIONS};__WXMSW__;_CRT_SECURE_NO_WARNINGS")
set_target_properties(${NomProjet} PROPERTIES LINK_FLAGS_DEBUG  "/SUBSYSTEM:CONSOLE")
set_target_properties(${NomProjet} PROPERTIES LINK_FLAGS_RELEASE  "/SUBSYSTEM:CONSOLE")		


